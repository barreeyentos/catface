buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

jar {
	baseName = 'catface'
	version = '1.0.0'
}

sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

sourceSets {
    integrationTest {
        java {
	    srcDir file('src/integration/java')
	    resources.srcDir file('src/acceptanceTest/resources')
	    compileClasspath += main.output + test.output + configurations.testRuntime
	    runtimeClasspath += output + compileClasspath
        }
    }
}


dependencies {
    	compile( 'ch.qos.logback:logback-core:1.1.9',
    	'ch.qos.logback:logback-access:1.1.9',
    	'org.apache.commons:commons-collections4:4.1',
	'org.springframework.boot:spring-boot-starter-actuator',
	'org.springframework.boot:spring-boot-starter-web',
	'org.springframework.boot:spring-boot-starter-web-services',
	'org.springframework.boot:spring-boot-starter-security',
	'org.slf4j:slf4j-api:1.7.22')
    	
	testCompile('org.springframework.boot:spring-boot-starter-test')

}

test {
  reports {
    html.destination = file("$buildDir/reports/unit-test")
    junitXml.destination = file("$buildDir/unit-test-results")
  }
}

task integrationTest(type: Test) {
  description = 'Runs the integration tests'
  group = 'verification'
  testClassesDirs = sourceSets.integrationTest.output
  classpath = sourceSets.integrationTest.runtimeClasspath

  binResultsDir = file("$buildDir/integration-test-results/binary/integrationTest")

  reports {
    html.destination = file("$buildDir/reports/integration-test")
    junitXml.destination = file("$buildDir/integration-test-results")
  }

  mustRunAfter tasks.test
}


bootRun {
  environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: "dev"
}


check.dependsOn integrationTest

